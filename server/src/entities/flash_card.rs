//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.14

use super::sea_orm_active_enums::Share;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "flash_card")]
pub struct Model {
	#[sea_orm(primary_key)]
	pub id: u32,
	pub creator: u32,
	pub share: Share,
	#[sea_orm(column_type = "custom(\"LONGTEXT\")")]
	pub content: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(
		belongs_to = "super::user::Entity",
		from = "Column::Creator",
		to = "super::user::Column::Id",
		on_update = "Restrict",
		on_delete = "Restrict"
	)]
	User,
}

impl Related<super::user::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::User.def()
	}
}

impl ActiveModelBehavior for ActiveModel {}
